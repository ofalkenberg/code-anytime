#! /bin/sh

check_allowed() {
    day="$1"
    hour="$2"
    if [ "$day" = "Sat" ] || [ "$day" = "Sun" ]; then # allow on the weekends
        echo "Allowed"
    else                           # weekdays
        if [ "$hour" -lt 9 ]; then # allow before 9am
            echo "Allowed"
        elif [ "$hour" -ge 12 ] && [ "$hour" -le 13 ]; then # allow between 12pm and 1pm
            echo "Allowed"
        elif [ "$hour" -ge 23 ]; then # allow after 11pm
            echo "Allowed"
        else
            echo "Not allowed"
        fi
    fi
}

if [ -n "$GIT_COMMITTER_DATE" ]; then
    exit 0
fi

if command -v gdate >/dev/null 2>&1; then
    DATE="gdate"
elif command -v date >/dev/null 2>&1; then
    if date --version 2>&1 | grep -q "GNU coreutils"; then
        DATE="date"
    else
        echo "Error: 'date' command found but it isn't GNU date."
        exit 1
    fi
else
    echo "Error: No suitable date command found (gdate or GNU date)."
    exit 1
fi

offset=0
future_time=""
faked=false
while true; do
    day=$($DATE -d "${offset} min" +"%a")
    hour=$($DATE -d "${offset} min" +"%H")
    if [ "$(check_allowed "$day" "$hour")" != "Allowed" ]; then
        offset=$((offset + 15))
        faked=true
        continue
    fi
    future_time=$($DATE -d "${offset} min" +"%Y-%m-%d %H:%M:%S")
    break
done
if [ "$faked" = true ]; then
    echo "Fake time: [${future_time}]"
else
    echo "Real time: [${future_time}]"
    exit 0
fi

GIT_AUTHOR_DATE="$($DATE --date="${future_time}" --iso-8601=seconds)"
GIT_COMMITTER_DATE="$GIT_AUTHOR_DATE"
export GIT_AUTHOR_DATE
export GIT_COMMITTER_DATE

git commit --amend --date "$GIT_AUTHOR_DATE" --no-edit
